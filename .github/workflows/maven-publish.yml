# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: mavendep

on:
  push:
    branches: [main, release]
  pull_request: 
    branches: [main]

jobs:
    publish:
      runs-on: windows-latest
      permissions: 
        contents: read
        packages: write 
      steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PASSPHRASE }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
#       - name: Set up GPG
#         run: |
#           echo "$GPG_PRIVATE_KEY" > private.asc
#           gpg --import --batch private.asc
#         env:
#           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Run Tests 
        run: mvn test
#       - name: Maven Version Bump Action
#         uses: ./version-bump.sh
      - name: Publish to Apache Maven Central
        run: mvn clean deploy
        env:
          OSSRH_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${ secrets.GPG_PASSPHRASE }
